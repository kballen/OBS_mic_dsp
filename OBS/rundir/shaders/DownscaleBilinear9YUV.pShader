/********************************************************************************
 Copyright (C) 2013 Hugh Bailey <obs.jim@gmail.com>

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
********************************************************************************/


uniform Texture2D diffuseTexture;
uniform float4x4 yuvMat;
uniform float2 baseDimensionI;

SamplerState textureSampler
{
    AddressU  = Clamp;
    AddressV  = Clamp;
    Filter    = Linear;
};

struct VertData
{
    float4 pos      : SV_Position;
    float2 texCoord : TexCoord0;
};

float4 main(VertData input) : SV_Target
{
    float2 texCoord = input.texCoord;

    float2 adjust = baseDimensionI;
    float4 rgba;
    rgba.rgb  = diffuseTexture.Sample(textureSampler, texCoord).rgb;
    rgba.rgb += diffuseTexture.Sample(textureSampler, texCoord + float2(-adjust.x, -adjust.y)).rgb;
    rgba.rgb += diffuseTexture.Sample(textureSampler, texCoord + float2(-adjust.x,       0.0)).rgb;
    rgba.rgb += diffuseTexture.Sample(textureSampler, texCoord + float2(-adjust.x,  adjust.y)).rgb;
    rgba.rgb += diffuseTexture.Sample(textureSampler, texCoord + float2(      0.0, -adjust.y)).rgb;
    rgba.rgb += diffuseTexture.Sample(textureSampler, texCoord + float2(      0.0,  adjust.y)).rgb;
    rgba.rgb += diffuseTexture.Sample(textureSampler, texCoord + float2( adjust.x, -adjust.y)).rgb;
    rgba.rgb += diffuseTexture.Sample(textureSampler, texCoord + float2( adjust.x,       0.0)).rgb;
    rgba.rgb += diffuseTexture.Sample(textureSampler, texCoord + float2( adjust.x,  adjust.y)).rgb;
    rgba.rgb /= 9.0;

    rgba.a = 1.0;

    //-------------------------------------------------------------

    //a nice quick colorspace conversion
    float4 yuvx = mul(float4(rgba.rgb, 1.0), yuvMat);
    return float4(saturate(yuvx.zxy), rgba.a);
}
